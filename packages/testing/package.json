{
  "name": "@simplux/testing",
  "version": "0.18.0-alpha.10",
  "description": "The testing package for simplux. Contains various testing utilities (e.g. for mocking module states and mutations).",
  "module": "./esm2015/index.js",
  "main": "./index.js",
  "types": "./index.d.ts",
  "exports": {
    ".": {
      "require": "./index.js",
      "import": "./esm2015/index.js"
    }
  },
  "scripts": {
    "build": "node ../../scripts/build.package.js --forceEnableColors=true",
    "build:ci": "npm run build -- --forceEnableColors=false --ci",
    "lint": "tslint -c ../../tslint.json -p ./tsconfig.json --fix",
    "lint:ci": "tslint -c ../../tslint.json -p ./tsconfig.json",
    "test": "jest --forceExit --verbose --detectOpenHandles --no-cache --colors --config=./jest.config.js",
    "test:watch": "npm run test -- --watchAll",
    "test:ci": "npm run test -- --runInBand --ci --coverage --reporters default",
    "report-coverage": "codecov -f ./coverage/lcov.info --disable=gcov -F testing",
    "publish:custom": "npm publish ./dist --access public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MrWolfZ/simplux.git"
  },
  "bugs": {
    "url": "https://github.com/MrWolfZ/simplux/issues"
  },
  "homepage": "https://github.com/MrWolfZ/simplux/tree/master/packages/testing#readme",
  "keywords": [
    "redux",
    "simplux",
    "state",
    "typescript",
    "testing",
    "mocking"
  ],
  "author": "Jonathan Ziller <jonathan.ziller@gmail.com> (https://www.github.com/MrWolfZ)",
  "license": "MIT",
  "private": false,
  "dependencies": {
    "@simplux/core": "0.18.0-alpha.10"
  },
  "devDependencies": {
    "jest": "^26.6.3",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.2",
    "rollup": "^2.35.1",
    "tsd": "^0.14.0",
    "tslint": "^6.1.3",
    "typescript": "^4.1.3"
  },
  "tsd": {
    "compilerOptions": {
      "baseUrl": ".",
      "paths": {
        "@simplux/testing": [
          "./index.d.ts"
        ]
      },
      "types": [
        "node"
      ],
      "skipLibCheck": true
    }
  }
}
